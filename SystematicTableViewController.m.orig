//
//  SystematicTableViewController.m
//  theologica
//
//  Created by Jonathan Lace on 7/17/13.
//  Copyright (c) 2013 techrament. All rights reserved.
//

#import "SystematicTableViewController.h"
#import "SystematicDetailViewController.h"
#import "WordDataSource.h"
#import "Word.h"

@interface SystematicTableViewController ()
@property (nonatomic, readonly) NSString *category;
@property (nonatomic, strong) WordDataSource *wordDataSource;
@end

@implementation SystematicTableViewController

- (NSString *)category
{
    return @"systematic";
}

- (WordDataSource *)wordDataSource
{
    if (!_wordDataSource) {
        _wordDataSource = [[WordDataSource alloc] init];
    }
    
    return _wordDataSource;
}

- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:style];
    if (self)
    {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    
    NSDictionary *textAttributes = [NSDictionary dictionaryWithObjectsAndKeys:
                                    [UIColor blackColor],NSForegroundColorAttributeName,
                                    [UIColor blackColor],NSBackgroundColorAttributeName,nil];
    self.navigationController.navigationBar.titleTextAttributes = textAttributes;
<<<<<<< HEAD
=======
    

    terms = @{
              @"A" : @[@"accidence", @"adoption", @"agape", @"aggiornomento", @"agnostic", @"allegory", @"analogy"
                       , @"Annointing of the Sick", @"apologetics", @"apophatic", @"a posteriori", @"a priori", @"argument", @"atonement"],
              @"B" : @[@"baptism", @"blasphemy"],
              @"C" : @[@"canon", @"Christ", @"compatiblism", @"Confession", @"Confirmation", @"Cosmological Argument", @"Creationism", @"creed"],
              @"D" : @[@"deism", @"determinism", @"Development of Doctrine", @"dualism"],
              @"E" : @[@"epistemology", @"eschatology", @"essence", @"exclusivism", @"ex nihilo", @"ex opere operato", @"explanans", @"explanandum"],
              @"F" : @[@"faith", @"fideism", @"foreknowledge", @"free-will"],
              @"G" : @[@"gospel", @"grace"],
              @"H" : @[@"heaven", @"hell", @"henotheism", @"heresy"],
              @"I" : @[@"idolatry", @"immanence", @"inclusivism"],
              @"J" : @[@"justification"],//50
              @"K" : @[@"kataphatic", @"kenosis"],
              @"L" : @[@"Law of Non-Contradiction", @"Liberation Theology", @"logic"],
              @"M" : @[@"metaphysics", @"miracle", @"monotheism", @"mystery"],
              @"N" : @[@"natural theology", @"numinous"],
              @"O" : @[@"objective", @"omnibenevolence", @"omnipotence", @"omnipresence", @"omniscience", @"Ontological Argument", @"Open Theism", @"orthodoxy", @"orthodpraxy"],
              @"P" : @[@"person", @"philosophy", @"physicalism", @"pluralism", @"polytheism", @"predestination", @"Problem of Evil", @"Process Theology"],
              @"Q" : @[@"quintessence"],
              @"R" : @[@"redemption", @"religious experience", @"repentance", @"revelation"],
              @"S" : @[@"salvation", @"sensus fidelium", @"soteriology", @"subjective", @"substance", @"Systematic Theology"],
              @"T" : @[@"Teleological Argument", @"theism", @"theodicy", @"theological aesthetics", @"theology", @"Trinity"],
              @"U" : @[@"universalism"],
              @"V" : @[@"vicarious"],
              @"W" : @[@"will"],
              @"X" : @[@"x"],
              @"Y" : @[@"YHWH"],
              @"Z" : @[@"zeitgeist"],//98
             };
                                                                                                                        
    letters = [[terms allKeys] sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)];
    
    //A
    
    Word *accidence = [[Word alloc] init];
    accidence.name = @"accidence";
    accidence.definition = @"In Aristotelean philosophy, a nonessential property or quality of a substance.";
    
    Word *adoption = [[Word alloc] init];
    adoption.name = @"adoption";
    adoption.definition = @"The process of becoming a child of God through Jesus Christ. See Catechism of the Catholic Church, 1. http://www.vatican.va/archive/ccc_css/archive/catechism/prologue.htm#1";
    
    Word *agape = [[Word alloc] init];
    agape.name = @"agape";
    agape.definition = @"The Greek word meaning “universal and unconditional will for the good of another”. The gospel writers use this word to describe Jesus' teaching on the love of God as well as the love for God, neighbors and enemies. See “Deus Caritas Est” by Pope Benedict XVI. http://www.vatican.va/holy_father/benedict_xvi/encyclicals/documents/hf_ben-xvi_enc_20051225_deus-caritas-est_en.html";
    
    Word *aggiornomento = [[Word alloc] init];
    aggiornomento.name = @"aggiornomento";
    aggiornomento.definition = @"An Italian word meaning “to bring up to date” which became popular during the Second Vatican Council (1962-1965).";
    
    Word *agnostic = [[Word alloc] init];
    agnostic.name = @"agnostic";
    agnostic.definition = @"From the Greek word for “not knowing”, a term used to describe uncertainty about the question of God's existence. See Catechism of the Catholic Church, 2127. http://www.vatican.va/archive/ccc_css/archive/catechism/p3s2c1a1.htm.";
    
    Word *allegory = [[Word alloc] init];
    allegory.name = @"allegory";
    allegory.definition = @"From the Greek word for “speaking by way of something else”, a reference to an interpretation of a text that goes beyond the literal meaning to find a deeper connection to a higher order of reality. See Catechism of the Catholic Church, 117. http://www.vatican.va/archive/ccc_css/archive/catechism/p1s1c2a3.htm.";
    
    Word *analogy = [[Word alloc] init];
    analogy.name = @"analogy";
    analogy.definition = @"A way of probing eternal truths. See Catechism of the Catholic Church, 114. http://www.vatican.va/archive/ccc_css/archive/catechism/p1s1c2a3.htm";
    
    Word *anointing = [[Word alloc] init];
    anointing.name = @"Anointing of the Sick";
    anointing.definition = @"The sacrament of healing. See Catechism of the Catholic Church, 1499. http://www.vatican.va/archive/ccc_css/archive/catechism/p2s2c2a5.htm.";
    
    Word *apologetics = [[Word alloc] init];
    apologetics.name = @"apologetics";
    apologetics.definition = @"The rational defense of the Christian faith; from the Greek words (apo) - “from” and (logia) - “reason”.";
    
    Word *apophatic = [[Word alloc] init];
    apophatic.name = @"apophatic";
    apophatic.definition = @"Language that uses negation to describe God.";
    
    Word *aposteriori = [[Word alloc] init];
    aposteriori.name = @"a priori";
    aposteriori.definition = @"A philosophical category which follows human experience. The statement “Water boils at 0 degrees Celsius” is an a posteriori truth. See Stanford Encyclopedia of Philosophy, “A Priori Justification and Knowledge”. http://plato.stanford.edu/entries/apriori/.";
    
    Word *apriori = [[Word alloc] init];
    apriori.name = @"a priori";
    apriori.definition = @"A philosophical category which precedes human experience. The statement “All bachelors are unmarried' is an a priori truth. See Stanford Encyclopedia of Philosophy, “A Priori Justification and Knowledge”. http://plato.stanford.edu/entries/apriori/.";
    
    Word *argument = [[Word alloc] init];
    argument.name = @"argument";
    argument.definition = @"A series of statements that establishes a truth claim; made of two parts - premise and conclusion; the from can be deductive or inductive; deductive arguments can be valid or invalid. See Internet Encylopedia of Philosophy, “Argument”. http://www.iep.utm.edu/argument/";
    
    Word *atonement = [[Word alloc] init];
    atonement.name = @"atonement";
    atonement.definition = @"The act of making restitution for inflicted harm; a theological interpretation of the death of Jesus of Nazrareth. See Catechism of the Catholic Church, 616. http://www.vatican.va/archive/ccc_css/archive/catechism/p122a4p2.htm";
    
    //B
    
    Word *baptism = [[Word alloc] init];
    baptism.name = @"baptism";
    baptism.definition = @"A ritual washing used for initiation into the Christian community. See Catechism of the Catholic Church, 1213. http://www.vatican.va/archive/ccc_css/archive/catechism/p2s2c1a1.htm";
    
    Word *blasphemy = [[Word alloc] init];
    blasphemy.name = @"blasphemy";
    blasphemy.definition = @"A form of religious slander. See Catechism of the Catholic Church, 2148. http://www.vatican.va/archive/ccc_css/archive/catechism/p3s2c1a2.htm";
    
    //C
    
    Word *canon = [[Word alloc] init];
    canon.name = @"canon";
    canon.definition = @"Greek word for “measuring stick”; used metaphorically to refer to a collection of texts regarded as authoritative for faith and practice within a community. See Catechism of the Catholic Church, 101. http://www.vatican.va/archive/ccc_css/archive/catechism/p1s1c2a3.htm. Also see Pontifical Biblical Commission, “The Interpretation of the Bible in the Church, III.B”. http://catholic-resources.org/ChurchDocs/PBC_Interp-FullText.htm ";

    Word *Christ = [[Word alloc] init];
    Christ.name = @"Christ";
    Christ.definition = @"The title given to Jesus of Nazareth by early Christians - from the Greek word χριστος (christos) - “annointed one”. See Catechism of the Catholic Church, 436. http://www.vatican.va/archive/ccc_css/archive/catechism/p1s2c2a2.htm";
    
    Word *compatiblism = [[Word alloc] init];
    compatiblism.name = @"compatiblism";
    compatiblism.definition = @"The belief that human freedom is compatible with deterministic elements of human experience. See Standford Encyclopedia of Philosophy, “Compatibilism”. http://plato.stanford.edu/entries/compatibilism/.";
    
    Word *confession = [[Word alloc] init];
    confession.name = @"Confession";
    confession.definition = @"The sacrament of reconciliation... See Catechism of the Catholic Church, 1424. http://www.vatican.va/archive/ccc_css/archive/catechism/p2s2c2a4.htm";
    
    Word *confirmation = [[Word alloc] init];
    confirmation.name = @"Confirmation";
    confirmation.definition = @"The sacrament of reception of the Holy Spirit. See Catechism of the Catholic Church, 1285. http://www.vatican.va/archive/ccc_css/archive/catechism/p2s2c1a2.htm";
    
    Word *cosmological = [[Word alloc] init];
    cosmological.name = @"Cosmological Argument";
    cosmological.definition = @"One of the classical arguments for the existence of God, based on the First Cause argument. See Stanford Encyclopedia of Philosophy, “Cosmological Argument”. http://plato.stanford.edu/entries/cosmological-argument/. Thomas Aquinas, Summa Theologica, ST, Ia, q. 2 a. 3 co. http://www.fordham.edu/halsall/source/aquinas3.asp";
    
    Word *creationism = [[Word alloc] init];
    creationism.name = @"Creationism";
    creationism.definition = @"The belief that God created the earth and human beings directly, with no biological predecessors as described in the book of Genesis.";
    
    Word *creed = [[Word alloc] init];
    creed.name = @"creed";
    creed.definition = @"from the Latin “credo” (I believe) - a statement of belief; used to refer to the historical creeds of the Church, most notably the Apostle's and Nicene creed. See Catechism of the Catholic Church, 187. http://www.vatican.va/archive/ccc_css/archive/catechism/p1s2.htm";
    
    //D
    
    Word *deism = [[Word alloc] init];
    deism.name = @"deism";
    deism.definition = @"The belief that God created the world but does not intervene in the natural course of the world. See http://en.wikipedia.org/wiki/Deism";
    
    Word *determinism = [[Word alloc] init];
    determinism.name = @"determinism";
    determinism.definition = @"The belief that all events, including human actions, are determined by physical phenomena, negating the concept of free-will. See Stanford Encyclopedia of Philosophy, “Causal Determinism”. http://plato.stanford.edu/entries/determinism-causal/.";
    
    Word *developmentDoc = [[Word alloc] init];
    developmentDoc.name = @"Development of Doctrine";
    developmentDoc.definition = @"The idea that the teaching of the Church can develop over time; first found in the writings of Vincent of Lerins and later re-emphasized by Cardinal John Henry Newman. See John Henry Newman, “Essay on the Development of Doctrine”. http://www.newmanreader.org/Works/development/index.html.";
    
    Word *dualism = [[Word alloc] init];
    dualism.name = @"dualism";
    dualism.definition = @"The belief that humans are composed of two substances, body and soul/mind; also known as substance dualism; found in the Platonic influence on Christianity and later in the writings of Descartes. Associated problems include the problem of causation and the seeming violation of the scientific law of the conservation of energy. See Stanford Dncyclopedia of Philosophy “Dualism”. http://plato.stanford.edu/entries/dualism/.";
    
    //E
    
    Word *epistemology = [[Word alloc] init];
    epistemology.name = @"epistemology";
    epistemology.definition = @"The study of the origin, nature, and limits of human knowledge; one of the three traditional subjects of Western philosophy. See Standford Encyclopedia of Philosophy “Epistemology”. http://plato.stanford.edu/entries/epistemology/";
    
    Word *eschatology = [[Word alloc] init];
    eschatology.name = @"eschatology";
    eschatology.definition = @"from the Greek “eschaton” (last thing) - the belief that history will have an end brought about by Divine intervention. See Catechism of the Catholic Church, 673. http://www.vatican.va/archive/ccc_css/archive/catechism/p1s2c2a7.htm.";
    
    Word *essence = [[Word alloc] init];
    essence.name = @"essence";
    essence.definition = @"A property that makes an object what it is. See Standford Encyclopedia of Philosophy “Essential vs. Accidental Properties”. http://plato.stanford.edu/entries/essential-accidental/.";
    
    Word *exclusivism = [[Word alloc] init];
    exclusivism.name = @"exclusivism";
    exclusivism.definition = @"The soteriological belief that only those people who have a made an explicit Christian confession will experience salvation.";
    
    Word *explanandum = [[Word alloc] init];
    explanandum.name = @"explanandum";
    explanandum.definition = @"That which is explained by something else.";
    
    Word *explanans = [[Word alloc] init];
    explanans.name = @"explanans";
    explanans.definition = @"That which explains something else...";

    
    Word *exNihilo = [[Word alloc] init];
    exNihilo.name = @"ex nihilo";
    exNihilo.definition = @"from the Latin “out of nothing” - The belief that God created the world out of nothing. See Catechism of the Catholic Church, 296. http://www.vatican.va/archive/ccc_css/archive/catechism/p1s2c1p4.htm.";
    
    Word *exOpere = [[Word alloc] init];
    exOpere.name = @"ex opere operato";
    exOpere.definition = @"Latin phrase for “from the work, worked”.";

    
    //F
    
    Word *faith = [[Word alloc] init];
    faith.name = @"faith";
    faith.definition = @"1. Trust or confidence; 2. The content of a religious system (“The Christian faith”).";
    
    //G
    
    //H
    
    //I
    
    Word *immanence = [[Word alloc] init];
    immanence.name = @"immanence";
    immanence.definition = @"The quality of being within human experience.";
    
    //J
    
    Word *jesus = [[Word alloc] init];
    jesus.name = @"Jesus of Nazareth";
    jesus.definition = @"The first-century Jewish prophet who proclaimed the Kingdom of God, was executed by the Roman govenor Pontius Pilate, and whom the early Christians believed to raised from dead as the Christ and Son of God.";
    
    //K
    
    //L
    
    //M
    
    Word *metaphysics = [[Word alloc] init];
    metaphysics.name = @"metaphysics";
    metaphysics.definition = @"The study of the fundamental nature of reality.";
    
    //N
    
    //O
    
    //P
    
    Word *philosophy = [[Word alloc] init];
    philosophy.name = @"philosophy";
    philosophy.definition = @"The critical examination of human thought; the love of wisdom.";
    
    //Q
    
    //R
    
    //S
    
    //T
    
    Word *theoAesthetics = [[Word alloc] init];
    theoAesthetics.name = @"theological aesthetics";
    theoAesthetics.definition = @"The study of God in light of the human experience of the arts.";
    
    Word *transcendence = [[Word alloc] init];
    transcendence.name = @"transcendence";
    transcendence.definition = @"The quality of going beyond human experience.";
    
    //U
    
    Word *universalism = [[Word alloc] init];
    universalism.name = @"universalism";
    universalism.definition = @"The belief that all of humanity will ultimately experience salvation.";
    
    //V
    
    //W
    
    //X
    
    //Y
    
    //Z
    
       _systematicDetails = [[NSMutableArray alloc] init];

    //@boxenjim's solution
    for (NSString *letter in letters)
    {
        NSMutableArray *array = [NSMutableArray array];
        if ([letter isEqualToString:@"A"])
            {
                [array addObject: accidence];
                [array addObject: adoption];
                [array addObject: agape];
                [array addObject: aggiornomento];
                [array addObject: agnostic];
                [array addObject: allegory];
                [array addObject: analogy];
                [array addObject: anointing];
                [array addObject: apologetics];
                [array addObject: apophatic];
                [array addObject: aposteriori];
                [array addObject: apriori];
                [array addObject: argument];
                [array addObject: atonement];
            }
        else if ([letter isEqualToString:@"B"])
            {
                [array addObject: baptism];
                [array addObject: blasphemy];
            }
        else if ([letter isEqualToString:@"C"])
            {
                [array addObject: canon];
                [array addObject: Christ];
            [array addObject: compatiblism];
            [array addObject: confession];
            [array addObject: confirmation];
            [array addObject: cosmological];
            [array addObject: creationism];
                [array addObject: creed];
            }
        else if ([letter isEqualToString:@"D"])
            {
                [array addObject: deism];
            [array addObject: determinism];
            [array addObject: developmentDoc];
            [array addObject: dualism]; 
            }
        else if ([letter isEqualToString:@"E"])
            {
                [array addObject: epistemology];
                [array addObject: eschatology];
                [array addObject: essence];
                [array addObject: exclusivism];
                [array addObject: exNihilo];
                [array addObject: exOpere];
                [array addObject: explanans];
                [array addObject: explanandum];
            }
        else if ([letter isEqualToString:@"F"])
            {
                [array addObject: faith]; 
            }
        else if ([letter isEqualToString:@"G"])
            {
            
            }
        else if ([letter isEqualToString:@"H"])
            {
            
            }
        else if ([letter isEqualToString:@"I"])
            {
                [array addObject: immanence];
            }
        else if ([letter isEqualToString:@"J"])
            {
                [array addObject:jesus]; 
            }
        else if ([letter isEqualToString:@"K"])
            {
            
            }
        else if ([letter isEqualToString:@"L"])
            {
            
            }
        else if ([letter isEqualToString:@"M"])
            {
                [array addObject: metaphysics];
            }
        else if ([letter isEqualToString:@"N"])
            {
            
            }
        else if ([letter isEqualToString:@"O"])
            {
            
            }
        else if ([letter isEqualToString:@"P"])
            {
                [array addObject: philosophy];
            }
        else if ([letter isEqualToString:@"Q"])
            {
            
            }
        else if ([letter isEqualToString:@"R"])
            {
            
            }
        else if ([letter isEqualToString:@"S"])
            {
            
            }
        else if ([letter isEqualToString:@"T"])
            {
                [array addObject: theoAesthetics]; 
                [array addObject: transcendence];
            }
        else if ([letter isEqualToString:@"U"])
            {
                [array addObject: universalism]; 
            }
        else if ([letter isEqualToString:@"V"])
            {
            
            }
        else if ([letter isEqualToString:@"W"])
            {
            
            }
        else if ([letter isEqualToString:@"Y"])
            {
            
            }
        else if ([letter isEqualToString:@"Z"])
            {
            
            }
    
             [_systematicDetails addObject:array];
    }
    
    
    // Uncomment the following line to preserve selection between presentations.
    // self.clearsSelectionOnViewWillAppear = NO;
 
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
    
    [[NSNotificationCenter defaultCenter]
     addObserver:self
     selector:@selector(preferredContentSizeChanged:)
     name:UIContentSizeCategoryDidChangeNotification
     object:nil];
}

- (void)preferredContentSizeChanged:(NSNotification *)notification
{
    [self.tableView reloadData];
>>>>>>> 4002fa926a5ba49baacaecfdc24b995abf2445f0
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    // Return the number of sections.
    return [self.wordDataSource numberOfSectionsInDataSourceCategory:self.category];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.wordDataSource numberOfRowsInSection:section forCategory:self.category];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"systematicCell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];
    
    // Configure the cell...
<<<<<<< HEAD
    Word *word = [self.wordDataSource wordForRowAtIndexPath:indexPath forCategory:self.category];
    cell.textLabel.text = word.name;
=======
    NSString *sectionTitle = [letters objectAtIndex:indexPath.section];
    NSArray *sectionTerms = [terms objectForKey:sectionTitle];
    NSString *term = [sectionTerms objectAtIndex:indexPath.row];
    cell.textLabel.text = term;
    
    cell.textLabel.font = [UIFont preferredFontForTextStyle:UIFontTextStyleBody];
    
    //need code for setting initial font on table view
    
    //Original Code
    //cell.textLabel.text = [_systematicTerms objectAtIndex:indexPath.row];
>>>>>>> 4002fa926a5ba49baacaecfdc24b995abf2445f0
    
    return cell;
}


-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{

    return [self.wordDataSource titleForHeaderInSection:section forCategory:self.category];
}

/*
// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Return NO if you do not want the specified item to be editable.
    return YES;
}
*/

/*
// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source
        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
    }   
    else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
    }   
}
*/

/*
// Override to support rearranging the table view.
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath
{
}
*/

/*
// Override to support conditional rearranging of the table view.
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Return NO if you do not want the item to be re-orderable.
    return YES;
}
*/

#pragma mark - Table view delegate

-(CGFloat) tableView: (UITableView *) tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static UILabel* label;
    if (!label) {
        label = [[UILabel alloc]
                 initWithFrame:CGRectMake(0, 0, FLT_MAX, FLT_MAX)];
        label.text = @"test";
    }
    
    label.font = [UIFont preferredFontForTextStyle:UIFontTextStyleBody];
    [label sizeToFit];
    return label.frame.size.height * 2.75;
    //return 50;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Navigation logic may go here. Create and push another view controller.
    /*
     <#DetailViewController#> *detailViewController = [[<#DetailViewController#> alloc] initWithNibName:@"<#Nib name#>" bundle:nil];
     // ...
     // Pass the selected object to the new view controller.
     [self.navigationController pushViewController:detailViewController animated:YES];
     */
}

-(void) prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender
{
    if ([[segue identifier] isEqualToString:@"showWord"])
    {
        NSIndexPath *indexPath = [self.tableView indexPathForSelectedRow];
        Word *word = [self.wordDataSource wordForRowAtIndexPath:indexPath forCategory:self.category];
    
        SystematicDetailViewController *WordViewController = [segue destinationViewController];
        WordViewController.currentWordDetail = word;
    }
}

- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView
{
    return [self.wordDataSource sectionIndexTitlesForCategory:self.category];
}

- (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index
{
    return [self.wordDataSource sectionForSectionIndexTitle:title forCategory:self.category];
}

- (IBAction)info:(UIBarButtonItem *)sender
{
    
}

@end
